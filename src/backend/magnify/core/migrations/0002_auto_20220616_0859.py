# Generated by Django 3.2.13 on 2022-06-16 08:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('token', models.CharField(max_length=100)),
                ('administrators', models.ManyToManyField(related_name='is_administrator_of', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Group',
                'verbose_name_plural': 'Groups',
                'db_table': 'magnify_group',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100)),
                ('administrators', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'db_table': 'magnify_room',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_administrator', models.BooleanField(default=False)),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.group')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Membership',
                'verbose_name_plural': 'Memberships',
                'db_table': 'magnify_membership',
            },
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('start', models.DateField()),
                ('end', models.DateField()),
                ('held_on_monday', models.BooleanField(default=False)),
                ('held_on_tuesday', models.BooleanField(default=False)),
                ('held_on_wednesday', models.BooleanField(default=False)),
                ('held_on_thursday', models.BooleanField(default=False)),
                ('held_on_friday', models.BooleanField(default=False)),
                ('held_on_saturday', models.BooleanField(default=False)),
                ('held_on_sunday', models.BooleanField(default=False)),
                ('start_time', models.TimeField()),
                ('expected_duration', models.DurationField()),
                ('administrators', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Meeting',
                'verbose_name_plural': 'Meetings',
                'db_table': 'magnify_meeting',
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(max_length=7, validators=[django.core.validators.RegexValidator(code='nomatch', message='Color must be a valid hexa code', regex='^#([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$')])),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(to='core.Group')),
                ('meetings', models.ManyToManyField(to='core.Meeting')),
                ('rooms', models.ManyToManyField(to='core.Room')),
            ],
            options={
                'verbose_name': 'Label',
                'verbose_name_plural': 'Labels',
                'db_table': 'magnify_label',
            },
        ),
        migrations.CreateModel(
            name='JitsiConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_open', models.BooleanField(default=False)),
                ('has_microphone_by_default', models.BooleanField(default=False)),
                ('has_camera_by_default', models.BooleanField(default=False)),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.meeting')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.room')),
            ],
            options={
                'verbose_name': 'Jitsi Configuration',
                'verbose_name_plural': 'Jitsi Configurations',
                'db_table': 'magnify_jitsi_configuration',
            },
        ),
        migrations.AddField(
            model_name='group',
            name='meetings',
            field=models.ManyToManyField(to='core.Meeting'),
        ),
        migrations.AddField(
            model_name='group',
            name='members',
            field=models.ManyToManyField(related_name='is_member_of', through='core.Membership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='group',
            name='rooms',
            field=models.ManyToManyField(to='core.Room'),
        ),
    ]
